" Vi iMproved
set nocompatible
" Disable filetype detection
filetype off
" Setup plugins
call plug#begin()
Plug 'airblade/vim-gitgutter'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'elixir-lang/vim-elixir', {'for': 'elixir'}
Plug 'fatih/vim-go', {'for': 'go'}
Plug 'itchyny/lightline.vim'
Plug 'JulesWang/css.vim', {'for': 'css'}
Plug 'mileszs/ack.vim'
Plug 'nanotech/jellybeans.vim'
Plug 'oscarh/vimerl', {'for': 'erlang'}
Plug 'pangloss/vim-javascript', {'for': 'javascript'}
Plug 'tikhomirov/vim-glsl', {'for': 'glsl'}
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fireplace', {'for': 'clojure'}
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-vinegar'
call plug#end()
" Enable filetype detection and indenting for supported filetypes
filetype plugin indent on
" Drawing options
set ttyfast
set lazyredraw
" Disable modline support
set nomodeline
set modelines=0
" Allow backspace in Insert mode
set backspace=indent,eol,start
" Minimum number of lines above and below cursor
set scrolloff=10
" Disable intro message
set shortmess+=I
" Do not automatically append first word and always show menu even for one
" match. This will disable preview
set completeopt=longest,menuone
" Allow hiding buffers that has been modified
set hidden


" Number of columns to use for one tab character
set tabstop=4
" Number of columns to jump when pressing <tab> or <bs>
set softtabstop=4
" Number of columns to indent when pressing >, < or =
set shiftwidth=4
" Insert 'softtabstop' amount of spaces instead of tab character
set expandtab
" Insert 'shiftwidth' amount of spaces if in front of a line when pressing
" <tab>
set smarttab
" Copy indentation from previous line when starting a new line
set autoindent


" Number of columns before wrap
set textwidth=78
" Disable window wrap
set nowrap


" Enable color syntax
syntax on
" Use specified colorscheme
set t_Co=256
colorscheme jellybeans
" Show line numbers
set number
" Hide cursor line
set nocursorline
" Hide (partial) command
set noshowcmd
" Show filename in window titlebar
set title
" Enable wild menu
set wildmenu
" Enable visual display for completion when using wild menu
set wildmode=list,longest,full
" Replace hidden/unwanted characters with a character symbol
set lcs=tab:▸\ ,trail:·,nbsp:_
set list
" Hide color column
set cc=
" Show status line
set laststatus=2
" Hide Insert/Replace/Visual mode message on the last line
set noshowmode


" Replace default <leader> key
let mapleader=","
" Exit Insert mode
inoremap jj <esc>
" Copy and paste from system clipboard with proper indenting
map <c-v> "+p
map <c-c> "+y
imap <c-v> <esc><c-v>
" Clears search highlights
nnoremap <leader><space> :noh<cr>
" Switching between (all) buffers
noremap <c-h> :bprev<cr>
noremap <c-l> :bnext<cr>
" Next (visible) buffer
nmap <tab> <c-w>w
" Prev (visible) buffer
nmap <s-tab> <c-w>W
" Resize vertical split
map <c-n> 2<c-w><
map <c-m> 2<c-w>>
" Select all
map <leader>a ggVG
" Open vimrc in a new tab
nmap <leader>v :tabedit $MYVIMRC<cr>
" Disable F1 (Help)
nmap <f1> <nop>
" Toggle visibility of special char such as tabs, tailing white space etc.
nmap <leader>l :set list!<cr>
" Stop window pop up
map q: :q
" Stop encryption
map :X :x
" Search with Ack
map \ :Ack<space>


" Case-insensitive searches
set ignorecase
" Case-sensitive if search contains an uppercase character
set smartcase
" Highlights search terms, press <,><space> to clear
set hlsearch
" Match string while typing a search command
set incsearch


" Don't create a backup file
set nobackup
set nowritebackup
" Don't create a swap file
set noswapfile
" Don't store information from earlier Vim sessions
set viminfo=
" Number of commands to track
set history=500
" Number of undo levels to track
set undolevels=500


" Automatically trim whitespaces before saving file
au BufWritePre * :%s/\s\+$//e
" Set .h to c style and .hpp to cpp style
au BufNewFile,BufRead *.h setlocal filetype=c
" Let SCons files share syntax coloring with python
au BufNewFile,BufRead SCons*
            \ setlocal filetype=python |
            \ let b:syntastic_checkers=['']
" Force default text formatting
"   t: Auto-wrap text using 'textwidth'
"   c: Auto-wrap comments using 'textwidth' and insert the current comment
"      leader automatically
"   r: Automatically insert the current comment leader after hitting enter
"      in Insert mode
au BufNewFile,BufRead * setlocal formatoptions=tcr


" Lightline settings
let g:lightline={
    \ 'colorscheme': 'jellybeans',
    \ }
" Stop running in realtime
let g:gitgutter_realtime=0
" Turn off eager execution
let g:gitgutter_eager=0
" Tweak to use silver searcher
let g:ackprg='ag --nogroup --nocolor --column --vimgrep'
