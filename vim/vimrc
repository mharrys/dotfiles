" UTF-8 character encoding
set encoding=utf-8
" Start Pathogen
runtime bundle/pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()
" Indicate a fast terminal connection
set ttyfast
" Disable errorbell and visualbell
set noeb novb t_vb=
" Enable mouse interaction
set mouse=a
" Disable modline support
set nomodeline
set modelines=0
" Allow backspace in Insert mode
set backspace=indent,eol,start
" Minimum number of lines above and below cursor
set scrolloff=4
" Disable Vim intro message
set shortmess=atI
" Enable filetype detection and indenting for supported filetypes
filetype plugin indent on
" Default text formatting
"   t: Auto-wrap text using 'textwidth'
"   c: Auto-wrap comments using 'textwidth', inserting the current comment
"      leader automatically
"   r: Automatically insert the current comment leader after hitting enter
"      in Insert mode
set formatoptions=tcr
" Do not automatically append first word and always show menu even for one
" match. This will disable preview
set completeopt=longest,menuone
" Allow hiding buffers that has been modified
set hidden


" ========== Tab =============================================================
" Number of columns to use for one tab character
set tabstop=4
" Number of columns to jump when pressing <tab> or <bs>
set softtabstop=4
" Number of columns to indent when pressing >, < or =
set shiftwidth=4
" Insert 'softtabstop' amount of spaces instead of tab character
set expandtab
" Insert 'shiftwidth' amount of spaces if infront of a line when pressing
" <tab>
set smarttab


" ========== Indent ==========================================================
" Copy indentation from previous line when starting a new line
set autoindent


" ========== Wrap ============================================================
" Number of columns before wrap
set textwidth=78
" Disable window wrap
set nowrap


" ========== Visual ==========================================================
" Enable color syntax
syntax on
" Enable 256 colors
set t_Co=256
" Use specified colorscheme
colorscheme noeyepain
" Show line numbers
set number
" Hide cursor line
set nocursorline
" Hide (partial) comman
set noshowcmd
" Show filename in window titlebar
set title
" Enable wild menu
set wildmenu
" Enable visual display for completion when using wild menu
set wildmode=list:longest,full
" Replace hidden/unwanted characters with a character symbol
set lcs=tab:▸\ ,trail:·,nbsp:_
set list
" Show color column
set cc=79
" Let SCons files share syntax coloring with python
au BufReadPost [Ss][Cc]onstruct set filetype=python
au BufReadPost SConscript set filetype=python


" ========== Key Mapping =====================================================
" Replace default <leader> key
let mapleader = ","
" Exit Insert mode
inoremap jj <esc>
" Copy and paste from system clipboard with proper indenting
map <c-v> "+p
map <c-c> "+y
imap <c-v> <esc><c-v>
" Clears search highlights
nnoremap <leader><space> :noh<cr>
" Switching between (all) buffers
noremap <c-h> :bprev<cr>
noremap <c-l> :bnext<cr>
" Next (visible) buffer
nmap <tab><tab> <c-w>w
" Resize vertical split
map <c-n> 2<c-w><
map <c-m> 2<c-w>>
" Select all
map <leader>a ggVG
" Open vimrc in a new tab
nmap <leader>v :tabedit $MYVIMRC<cr>
" Disable F1 (Help)
nmap <f1> <nop>
" Toggle visibility of special char such as tabs, tailing white space etc.
nmap <leader>l :set list!<cr>


" ========== Seach ===========================================================
" Case-insensitive searches
set ignorecase
" Case-sensitive if search contains an uppercase character
set smartcase
" Highlights search terms, press <,><space> to clear
set hlsearch
" Match string while typing a sarch command
set incsearch


" ========== Temporary Storage ===============================================
" Don't create a backup file
set nobackup
set nowritebackup
" Don't create a swap file
set noswapfile
" Don't store information from earlier Vim sessions
set viminfo=
" Number of commands to track
set history=500
" Number of undo levels to track
set undolevels=500


" ========= Script ===========================================================
" Automatically trim whitespaces before saving file
au BufWritePre * :%s/\s\+$//e


" ========== Plugin (Language Independent) ===================================
" airline: Show status line
set laststatus=2
" airline: Hide Insert, Replace or Visual mode on the last line
set noshowmode
" airline: Enable smarter tab line
let g:airline#extensions#tabline#enabled = 1
